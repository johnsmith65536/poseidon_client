/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class SendMessageReq : TBase
{
  private long _UserIdSend;
  private long _IdRecv;
  private string _Content;
  private int _ContentType;
  private int _MessageType;

  public long UserIdSend
  {
    get
    {
      return _UserIdSend;
    }
    set
    {
      __isset.UserIdSend = true;
      this._UserIdSend = value;
    }
  }

  public long IdRecv
  {
    get
    {
      return _IdRecv;
    }
    set
    {
      __isset.IdRecv = true;
      this._IdRecv = value;
    }
  }

  public string Content
  {
    get
    {
      return _Content;
    }
    set
    {
      __isset.Content = true;
      this._Content = value;
    }
  }

  public int ContentType
  {
    get
    {
      return _ContentType;
    }
    set
    {
      __isset.ContentType = true;
      this._ContentType = value;
    }
  }

  public int MessageType
  {
    get
    {
      return _MessageType;
    }
    set
    {
      __isset.MessageType = true;
      this._MessageType = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool UserIdSend;
    public bool IdRecv;
    public bool Content;
    public bool ContentType;
    public bool MessageType;
  }

  public SendMessageReq() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              UserIdSend = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I64) {
              IdRecv = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Content = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              ContentType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              MessageType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("SendMessageReq");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.UserIdSend) {
        field.Name = "UserIdSend";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(UserIdSend);
        oprot.WriteFieldEnd();
      }
      if (__isset.IdRecv) {
        field.Name = "IdRecv";
        field.Type = TType.I64;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(IdRecv);
        oprot.WriteFieldEnd();
      }
      if (Content != null && __isset.Content) {
        field.Name = "Content";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Content);
        oprot.WriteFieldEnd();
      }
      if (__isset.ContentType) {
        field.Name = "ContentType";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ContentType);
        oprot.WriteFieldEnd();
      }
      if (__isset.MessageType) {
        field.Name = "MessageType";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MessageType);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("SendMessageReq(");
    bool __first = true;
    if (__isset.UserIdSend) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("UserIdSend: ");
      __sb.Append(UserIdSend);
    }
    if (__isset.IdRecv) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("IdRecv: ");
      __sb.Append(IdRecv);
    }
    if (Content != null && __isset.Content) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Content: ");
      __sb.Append(Content);
    }
    if (__isset.ContentType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ContentType: ");
      __sb.Append(ContentType);
    }
    if (__isset.MessageType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MessageType: ");
      __sb.Append(MessageType);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

